version: '3'

services:

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"

  postgres:
    image: postgres:14.2-alpine
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust

  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "4040:4040"
    command: http --log stdout --authtoken=$NGROK_AUTHTOKEN host.docker.internal:8080

  localstack:
    image: localstack/localstack:1.0.4
    container_name: localstack
    environment:
      - DEFAULT_REGION=us-west-1
      - DYNAMO_DEPLOYMENT_HISTORY_CACHE_TABLE_NAME=deployment-history-cache
      - DYNAMO_AUDIT_LOG_TABLE_NAME=audit-log
      - DYNAMO_DEPLOYMENT_HISTORY_CACHE_TABLE_REGION=us-west-1
      - DYNAMO_AUDIT_LOG_TABLE_REGION=us-west-1
      - LAMBDA_REMOTE_DOCKER=false
      - LAMBDA_EXECUTOR=local # runs lambda inside temp directory instead of new docker container
      - SQS_ENDPOINT_STRATEGY=off # sets the SQS queue domain/path to the legacy version
      - LS_LOG=error # log level
    ports:
      - "4566:4566"
    volumes:
      - ./.localstack:/docker-entrypoint-initaws.d

  cryptor:
    build: etc/cryptor-mock
    container_name: cryptor
    environment:
      CRYPTOR_SIDECAR_CLIENT_IDENTIFICATION_CHALLENGE: "random-string" #has to match the one in env.test
    ports:
      - "26272:26272"

  app:
    container_name: app
    depends_on:
      - redis
      - postgres
      - localstack
      - cryptor
    volumes:
      - .:/app
    build:
      context: .
    ports:
      - "8080:8080" # main port
      - "9229:9229" # main debug port
      - "8081:8081" # worker port
      - "9230:9230" # worker debug port
    profiles:
      - e2e
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/jira-dev
      CRYPTOR_URL: http://cryptor:26272
      SQS_BACKFILL_QUEUE_URL: http://localstack:4566/000000000000/backfill
      SQS_PUSH_QUEUE_URL: http://localstack:4566/000000000000/push
      SQS_DEPLOYMENT_QUEUE_URL: http://localstack:4566/000000000000/deployment
      SQS_BRANCH_QUEUE_URL: http://localstack:4566/000000000000/branch
      SQS_TEST_QUEUE_URL: http://localstack:4566/000000000000/test-sqs-client
      SQS_INCOMINGANALYTICEVENTS_QUEUE_URL: http://localstack:4566/000000000000/incominganalyticevents
      REDISX_CACHE_HOST: redis
      NODE_ENV: ${NODE_ENV:-development} # defaults to development if NODE_ENV not set

  installation:
    depends_on:
      - app
    volumes:
      - ./etc/app-install:/app
    build:
      context: .
      dockerfile: etc/app-install/Dockerfile
    env_file:
      - .env

